/* eslint-disable */
/* tslint:disable */
/**
 * This is an autogenerated file created by the Stencil compiler.
 * It contains typing information for all components that exist in this project.
 */
import { HTMLStencilElement, JSXBase } from "@stencil/core/internal";
import { MatchResults } from "@stencil/router";
import { Pokemon, PokemonListItem, PokemonType } from "./types/types";
export namespace Components {
    interface AppHome {
    }
    interface AppProfile {
        "match": MatchResults;
    }
    interface AppRoot {
    }
    interface PokemonCard {
        "pokemon": Pokemon;
    }
    interface PokemonDetails {
        "pokemon": Pokemon;
    }
    interface PokemonError {
    }
    interface PokemonHeader {
    }
    interface PokemonImage {
        "src": string;
    }
    interface PokemonLink {
        "text": string;
        "url": string;
    }
    interface PokemonParagraph {
        "text": string;
    }
    interface PokemonSelect {
        "items": PokemonListItem[];
        "selectHandler": (event: UIEvent) => void;
    }
    interface PokemonSelectEvent {
        "items": PokemonListItem[];
    }
    interface PokemonSpinner {
        "text": string;
    }
    interface PokemonType {
    }
    interface PokemonTypes {
        /**
          * the pokemon types
         */
        "types": PokemonType[];
    }
}
declare global {
    interface HTMLAppHomeElement extends Components.AppHome, HTMLStencilElement {
    }
    var HTMLAppHomeElement: {
        prototype: HTMLAppHomeElement;
        new (): HTMLAppHomeElement;
    };
    interface HTMLAppProfileElement extends Components.AppProfile, HTMLStencilElement {
    }
    var HTMLAppProfileElement: {
        prototype: HTMLAppProfileElement;
        new (): HTMLAppProfileElement;
    };
    interface HTMLAppRootElement extends Components.AppRoot, HTMLStencilElement {
    }
    var HTMLAppRootElement: {
        prototype: HTMLAppRootElement;
        new (): HTMLAppRootElement;
    };
    interface HTMLPokemonCardElement extends Components.PokemonCard, HTMLStencilElement {
    }
    var HTMLPokemonCardElement: {
        prototype: HTMLPokemonCardElement;
        new (): HTMLPokemonCardElement;
    };
    interface HTMLPokemonDetailsElement extends Components.PokemonDetails, HTMLStencilElement {
    }
    var HTMLPokemonDetailsElement: {
        prototype: HTMLPokemonDetailsElement;
        new (): HTMLPokemonDetailsElement;
    };
    interface HTMLPokemonErrorElement extends Components.PokemonError, HTMLStencilElement {
    }
    var HTMLPokemonErrorElement: {
        prototype: HTMLPokemonErrorElement;
        new (): HTMLPokemonErrorElement;
    };
    interface HTMLPokemonHeaderElement extends Components.PokemonHeader, HTMLStencilElement {
    }
    var HTMLPokemonHeaderElement: {
        prototype: HTMLPokemonHeaderElement;
        new (): HTMLPokemonHeaderElement;
    };
    interface HTMLPokemonImageElement extends Components.PokemonImage, HTMLStencilElement {
    }
    var HTMLPokemonImageElement: {
        prototype: HTMLPokemonImageElement;
        new (): HTMLPokemonImageElement;
    };
    interface HTMLPokemonLinkElement extends Components.PokemonLink, HTMLStencilElement {
    }
    var HTMLPokemonLinkElement: {
        prototype: HTMLPokemonLinkElement;
        new (): HTMLPokemonLinkElement;
    };
    interface HTMLPokemonParagraphElement extends Components.PokemonParagraph, HTMLStencilElement {
    }
    var HTMLPokemonParagraphElement: {
        prototype: HTMLPokemonParagraphElement;
        new (): HTMLPokemonParagraphElement;
    };
    interface HTMLPokemonSelectElement extends Components.PokemonSelect, HTMLStencilElement {
    }
    var HTMLPokemonSelectElement: {
        prototype: HTMLPokemonSelectElement;
        new (): HTMLPokemonSelectElement;
    };
    interface HTMLPokemonSelectEventElement extends Components.PokemonSelectEvent, HTMLStencilElement {
    }
    var HTMLPokemonSelectEventElement: {
        prototype: HTMLPokemonSelectEventElement;
        new (): HTMLPokemonSelectEventElement;
    };
    interface HTMLPokemonSpinnerElement extends Components.PokemonSpinner, HTMLStencilElement {
    }
    var HTMLPokemonSpinnerElement: {
        prototype: HTMLPokemonSpinnerElement;
        new (): HTMLPokemonSpinnerElement;
    };
    interface HTMLPokemonTypeElement extends Components.PokemonType, HTMLStencilElement {
    }
    var HTMLPokemonTypeElement: {
        prototype: HTMLPokemonTypeElement;
        new (): HTMLPokemonTypeElement;
    };
    interface HTMLPokemonTypesElement extends Components.PokemonTypes, HTMLStencilElement {
    }
    var HTMLPokemonTypesElement: {
        prototype: HTMLPokemonTypesElement;
        new (): HTMLPokemonTypesElement;
    };
    interface HTMLElementTagNameMap {
        "app-home": HTMLAppHomeElement;
        "app-profile": HTMLAppProfileElement;
        "app-root": HTMLAppRootElement;
        "pokemon-card": HTMLPokemonCardElement;
        "pokemon-details": HTMLPokemonDetailsElement;
        "pokemon-error": HTMLPokemonErrorElement;
        "pokemon-header": HTMLPokemonHeaderElement;
        "pokemon-image": HTMLPokemonImageElement;
        "pokemon-link": HTMLPokemonLinkElement;
        "pokemon-paragraph": HTMLPokemonParagraphElement;
        "pokemon-select": HTMLPokemonSelectElement;
        "pokemon-select-event": HTMLPokemonSelectEventElement;
        "pokemon-spinner": HTMLPokemonSpinnerElement;
        "pokemon-type": HTMLPokemonTypeElement;
        "pokemon-types": HTMLPokemonTypesElement;
    }
}
declare namespace LocalJSX {
    interface AppHome {
    }
    interface AppProfile {
        "match"?: MatchResults;
    }
    interface AppRoot {
    }
    interface PokemonCard {
        "pokemon": Pokemon;
    }
    interface PokemonDetails {
        "pokemon"?: Pokemon;
    }
    interface PokemonError {
    }
    interface PokemonHeader {
    }
    interface PokemonImage {
        "src": string;
    }
    interface PokemonLink {
        "text": string;
        "url": string;
    }
    interface PokemonParagraph {
        "text"?: string;
    }
    interface PokemonSelect {
        "items": PokemonListItem[];
        "selectHandler": (event: UIEvent) => void;
    }
    interface PokemonSelectEvent {
        "items": PokemonListItem[];
        "onPokemonSelected"?: (event: CustomEvent<any>) => void;
    }
    interface PokemonSpinner {
        "text"?: string;
    }
    interface PokemonType {
    }
    interface PokemonTypes {
        /**
          * the pokemon types
         */
        "types": PokemonType[];
    }
    interface IntrinsicElements {
        "app-home": AppHome;
        "app-profile": AppProfile;
        "app-root": AppRoot;
        "pokemon-card": PokemonCard;
        "pokemon-details": PokemonDetails;
        "pokemon-error": PokemonError;
        "pokemon-header": PokemonHeader;
        "pokemon-image": PokemonImage;
        "pokemon-link": PokemonLink;
        "pokemon-paragraph": PokemonParagraph;
        "pokemon-select": PokemonSelect;
        "pokemon-select-event": PokemonSelectEvent;
        "pokemon-spinner": PokemonSpinner;
        "pokemon-type": PokemonType;
        "pokemon-types": PokemonTypes;
    }
}
export { LocalJSX as JSX };
declare module "@stencil/core" {
    export namespace JSX {
        interface IntrinsicElements {
            "app-home": LocalJSX.AppHome & JSXBase.HTMLAttributes<HTMLAppHomeElement>;
            "app-profile": LocalJSX.AppProfile & JSXBase.HTMLAttributes<HTMLAppProfileElement>;
            "app-root": LocalJSX.AppRoot & JSXBase.HTMLAttributes<HTMLAppRootElement>;
            "pokemon-card": LocalJSX.PokemonCard & JSXBase.HTMLAttributes<HTMLPokemonCardElement>;
            "pokemon-details": LocalJSX.PokemonDetails & JSXBase.HTMLAttributes<HTMLPokemonDetailsElement>;
            "pokemon-error": LocalJSX.PokemonError & JSXBase.HTMLAttributes<HTMLPokemonErrorElement>;
            "pokemon-header": LocalJSX.PokemonHeader & JSXBase.HTMLAttributes<HTMLPokemonHeaderElement>;
            "pokemon-image": LocalJSX.PokemonImage & JSXBase.HTMLAttributes<HTMLPokemonImageElement>;
            "pokemon-link": LocalJSX.PokemonLink & JSXBase.HTMLAttributes<HTMLPokemonLinkElement>;
            "pokemon-paragraph": LocalJSX.PokemonParagraph & JSXBase.HTMLAttributes<HTMLPokemonParagraphElement>;
            "pokemon-select": LocalJSX.PokemonSelect & JSXBase.HTMLAttributes<HTMLPokemonSelectElement>;
            "pokemon-select-event": LocalJSX.PokemonSelectEvent & JSXBase.HTMLAttributes<HTMLPokemonSelectEventElement>;
            "pokemon-spinner": LocalJSX.PokemonSpinner & JSXBase.HTMLAttributes<HTMLPokemonSpinnerElement>;
            "pokemon-type": LocalJSX.PokemonType & JSXBase.HTMLAttributes<HTMLPokemonTypeElement>;
            "pokemon-types": LocalJSX.PokemonTypes & JSXBase.HTMLAttributes<HTMLPokemonTypesElement>;
        }
    }
}
